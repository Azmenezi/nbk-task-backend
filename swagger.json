{
  "swagger": "2.0",
  "info": {
    "title": "Customer and Authentication API",
    "version": "1.0.0",
    "description": "API for managing customers and user authentication."
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "schemes": ["http"],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in a user",
        "description": "Authenticate a user and return a JWT token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/create": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "description": "Create a new user account.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/customer": {
      "post": {
        "tags": ["Customer"],
        "summary": "Create a new customer",
        "description": "Create a new customer record.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Customer details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date"
                },
                "gender": {
                  "type": "string",
                  "enum": ["male", "female"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "number": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date"
                },
                "gender": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Customer"],
        "summary": "Get all customers",
        "description": "Retrieve all customer records.",
        "responses": {
          "200": {
            "description": "A list of customers",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  },
                  "gender": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get customer by ID",
        "description": "Retrieve a customer record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "number": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date"
                },
                "gender": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Customer"],
        "summary": "Update customer by ID",
        "description": "Update a customer record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Customer details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date"
                },
                "gender": {
                  "type": "string",
                  "enum": ["male", "female"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "number": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date"
                },
                "gender": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Customer"],
        "summary": "Delete customer by ID",
        "description": "Delete a customer record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "gender": {
          "type": "string",
          "enum": ["male", "female"]
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}
